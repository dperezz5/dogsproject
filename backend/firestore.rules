rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isDogOwner(dogId) {
      let dogData = get(/databases/$(database)/documents/dogProfiles/$(dogId)).data;
      return isAuthenticated() && request.auth.uid == dogData.ownerId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }

    // Dog Profiles collection
    match /dogProfiles/{dogId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.ownerId;
      allow update, delete: if isDogOwner(dogId);
    }

    // Swipes collection
    match /swipes/{swipeId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid == get(/databases/$(database)/documents/dogProfiles/$(request.resource.data.swiperId)).data.ownerId;
      allow update, delete: if false; // Swipes cannot be modified or deleted
    }

    // Matches collection
    match /matches/{matchId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == get(/databases/$(database)/documents/dogProfiles/$(resource.data.dogProfile1)).data.ownerId ||
        request.auth.uid == get(/databases/$(database)/documents/dogProfiles/$(resource.data.dogProfile2)).data.ownerId
      );
      allow create: if false; // Matches are created by backend only
      allow update: if isAuthenticated() && (
        request.auth.uid == get(/databases/$(database)/documents/dogProfiles/$(resource.data.dogProfile1)).data.ownerId ||
        request.auth.uid == get(/databases/$(database)/documents/dogProfiles/$(resource.data.dogProfile2)).data.ownerId
      );
      allow delete: if false; // Matches cannot be deleted
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.reviewerId;
      allow update: if isOwner(resource.data.reviewerId);
      allow delete: if isOwner(resource.data.reviewerId);
    }
  }
} 